user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
  worker_connections 1024;
}

stream {
  log_format basic '$remote_addr [$time_local] '
  '$protocol $status $bytes_sent $bytes_received '
  '$session_time';
  access_log /var/log/nginx/stream-access.log basic buffer=32k;
  include /etc/nginx/conf.d/*.stream;

}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;

  sendfile on;
  #tcp_nopush     on;

  keepalive_timeout 65;

  #gzip  on;
  gzip on;
  #该指令用于开启或关闭gzip模块(on/off)

  gzip_buffers 16 8k;
  #设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。16 8k代表以8k为单位，安装原始数据大小以8k为单位的16倍申请内存

  gzip_comp_level 6;
  #gzip压缩比，数值范围是1-9，1压缩比最小但处理速度最快，9压缩比最大但处理速度最慢

  gzip_http_version 1.1;
  #识别http的协议版本

  gzip_min_length 256;
  #设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。默认值是0，不管页面多大都压缩。这里我设置了为256

  gzip_proxied any;
  #这里设置无论header头是怎么样，都是无条件启用压缩

  gzip_vary on;
  #在http header中添加Vary: Accept-Encoding ,给代理服务器用的

  gzip_types
  text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
  text/javascript application/javascript application/x-javascript
  text/x-json application/json application/x-web-app-manifest+json
  text/css text/plain text/x-component
  font/opentype font/ttf application/x-font-ttf application/vnd.ms-fontobject
  image/x-icon;
  #进行压缩的文件类型,这里特别添加了对字体的文件类型

  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  #禁用IE 6 gzip
  client_header_buffer_size 128k;
  client_body_buffer_size 1m;
  proxy_buffer_size 32k;
  proxy_buffers 64 32k;
  proxy_busy_buffers_size 1m;
  proxy_temp_file_write_size 512k;
  include /etc/nginx/conf.d/*.conf;
}

