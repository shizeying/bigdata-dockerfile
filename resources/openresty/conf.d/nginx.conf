







	server {
		listen       8090;
		server_name  localhost;
		charset utf-8;

		location / {
			 proxy_pass http://binghe_server;
		}

		# 动态更新 upstream 集群，同时更新 checkups 配置文件
		# checkups.update_upstream 接口是覆盖集群
		# 这里改为添加 server 到集群
		# 可根据情况自行更改
		location = /update_upstream {
			access_log off;
			allow 127.0.0.1;
			deny all;
			default_type text/plain;
			content_by_lua_block {
				local host = ngx.req.get_uri_args()["host"]
				local port = ngx.req.get_uri_args()["port"]
				local weight = ngx.req.get_uri_args()["weight"]

				if host == nil or port == nil then
                    ngx.say("usage: /update_upstream?host=x.x.x.x&port=x")
                    return
                end
				if type(port) == "string" then
					port= tonumber(port)
				end
				if weight == nil then
					weight = 10
				end
				local checkups = require "resty.checkups.api"
				local save_config = require "save_config"

				local ok = save_config.save_server(host,port,weight)
				if not ok then ngx.say("save server info error") end

				local upstream_data = checkups.get_upstream("up_http")
				local new_server = {host = host, port = port, weight=weight, max_fails=3, fail_timeout=10}
				table.insert(upstream_data.cluster[1].servers,new_server)
				local ok, err = checkups.update_upstream("up_http", upstream_data)
                if err then ngx.say(err) end

				ngx.say("update upstream ok")
			}
		}

		# 动态删除 upstream 集群，同时更新 checkups 配置文件
		# checkups.delete_upstream 接口是删除整个集群
		# 这里改为删除集群中指定 server 或者整个集群
		# 可根据情况自行更改
		location = /delete_upstream {
			access_log off;
			allow 127.0.0.1;
			deny all;
			default_type text/plain;
			content_by_lua_block {
				local host = ngx.req.get_uri_args()["host"]
				local port = ngx.req.get_uri_args()["port"]
				local skey = ngx.req.get_uri_args()["skey"]

				if (host == nil or port == nil) and skey == nil then
                    ngx.say("usage: /delete_upstream?host=x.x.x.x&port=x \nor\nusage: /delete_upstream?skey=x")
                    return
                end

				local checkups = require "resty.checkups.api"
				if skey ~= nil then
					local ok, err = checkups.delete_upstream(skey)
					if err then
						ngx.say(err)
					else
						ngx.say("ok")
					end
					return
				end

				if type(port) == "string" then
					port= tonumber(port)
				end

				local upstream_data = checkups.get_upstream("up_http")

				for i,v in ipairs(upstream_data.cluster[1].servers) do
					if v.host == host and v.port == port then
						table.remove(upstream_data.cluster[1].servers, i)
						local ok, err = checkups.update_upstream("up_http", upstream_data)
						if err then
							ngx.say(err)
						else
							local save_config = require "save_config"
							local ok = save_config.delete_server(port)
							if not ok then ngx.say("delete server info error") end

							ngx.say("delete upstream ok")
						end

						return
					end
				end

				ngx.say("failed")
			}
		}

		# 查看所有集群运行状态
		# 可根据情况自行更改
		location = /status {
			access_log off;
			allow 127.0.0.1;
			deny all;
			default_type application/json;
			content_by_lua_block {
				local cjson = require "cjson"
				local checkups = require "resty.checkups.api"
                ngx.say(cjson.encode(checkups.get_status()))
			}
		}
	}